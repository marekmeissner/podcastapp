version: 2

jobs:
  node:
    working_directory: ~/podcaster
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: eslint
          command: yarn lint

      - run:
          name: jest tests
          command: yarn test

      - persist_to_workspace:
          root: ~/podcaster
          paths:
            - node_modules

  android-test:
    working_directory: ~/podcaster/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: ~/podcaster

      - attach_workspace:
          at: ~/podcaster

      - restore_cache:
          key: bundle-v2-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run:
          name: install dependencies
          command: |
            gem update --system
            gem install bundler

      - run: bundle install

      - save_cache:
          key: bundle-v2-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane tests
          command: |
            mkdir -p test-results/fastlane
            bundle exec fastlane test
            mv fastlane/report.xml test-results/fastlane
      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  android-beta:
    working_directory: ~/podcaster/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: ~/podcaster

      - attach_workspace:
          at: ~/podcaster

      - restore_cache:
          key: bundle-v2-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run:
          name: install dependencies
          command: |
            gem update --system
            gem install bundler

      - run: bundle install

      - save_cache:
          key: bundle-v2-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane build beta
          command: |
            bundle exec fastlane beta

  ios:
    macos:
      xcode: "9.0"
    working_directory: ~/podcaster

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout

      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v2-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v2-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec fastlane test
          working_directory: ios

      - run:
          name: set up test results
          working_directory: ios
          when: always
          command: |
            mkdir -p test-results/fastlane test-results/xcode
            mv fastlane/report.xml test-results/fastlane
            mv fastlane/test_output/report.junit test-results/xcode/junit.xml
      - store_test_results:
          path: ios/test-results

      - store_artifacts:
          path: ios/test-results

workflows:
  version: 2
  node-android-ios:
    jobs:
      - node
      - android-test:
          requires:
            - node
          filters:
            branches:
              ignore: develop
      - android-beta:
          requires:
            - node
          filters:
            branches:
              only: develop
#      - ios:
#          requires:
#            - node
