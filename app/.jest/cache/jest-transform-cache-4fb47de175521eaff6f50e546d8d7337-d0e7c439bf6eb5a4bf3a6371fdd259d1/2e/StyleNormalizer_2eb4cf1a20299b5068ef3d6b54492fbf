ece2c0f2c013d668017c62eb71dd44cb
"use strict";var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _ShorthandsNormalizerFactory = _interopRequireWildcard(require("./ShorthandsNormalizerFactory"));var









StyleNormalizer = function () {
  function StyleNormalizer() {(0, _classCallCheck2.default)(this, StyleNormalizer);
    this.normalizers = {};
    this.createNormalizers('margin', [_ShorthandsNormalizerFactory.HORIZONTAL, _ShorthandsNormalizerFactory.VERTICAL, _ShorthandsNormalizerFactory.SIDES]);
    this.createNormalizers('padding', [_ShorthandsNormalizerFactory.HORIZONTAL, _ShorthandsNormalizerFactory.VERTICAL, _ShorthandsNormalizerFactory.SIDES]);
    this.createNormalizers('border', [_ShorthandsNormalizerFactory.SIDES], 'Width');
  }(0, _createClass2.default)(StyleNormalizer, [{ key: "createNormalizers", value: function createNormalizers(

    prop, shorthands) {var _this = this;var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      shorthands.forEach(function (shorthand) {
        var propName = prop + shorthand.type + suffix;

        if (_this.normalizerExists(propName)) {
          throw Error("Normalizer for '" + propName + "' shorthand already exists");
        }

        _this.normalizers[propName] =
        _ShorthandsNormalizerFactory.default.createNormalizer(prop, shorthand, suffix);
      });
    } }, { key: "normalizerExists", value: function normalizerExists(

    normalizerName) {
      return !!this.normalizers[normalizerName];
    } }, { key: "canNormalize", value: function canNormalize(

    prop) {
      return this.normalizerExists(prop);
    } }, { key: "normalize", value: function normalize(

    prop, val) {
      return this.normalizers[prop](val);
    } }]);return StyleNormalizer;}();exports.default = StyleNormalizer;