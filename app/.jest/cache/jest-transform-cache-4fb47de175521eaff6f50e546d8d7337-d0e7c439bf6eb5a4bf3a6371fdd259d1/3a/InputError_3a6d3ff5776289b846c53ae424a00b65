a97e2c83f21ba2e8d926b85ee3d5b25d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _nativeBase = require("native-base");

var _colors = require("../../utils/styles/colors");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styles = _reactNative.StyleSheet.create({
  error: {
    color: _colors.COLORS.RED,
    fontSize: 12
  }
});

var InputError = function InputError(_ref) {
  var children = _ref.children,
      style = _ref.style,
      testID = _ref.testID;
  return _react.default.createElement(_nativeBase.Text, {
    style: [styles.error, _objectSpread({}, style)],
    testID: testID
  }, children);
};

var _default = InputError;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9wcml2YXRlL3Zhci93d3cvSGlsbGNvZGUvcG9kY2FzdGFwcC9hcHAvc3JjL2NvbXBvbmVudHMvSW5wdXRFcnJvci9JbnB1dEVycm9yLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBUUEsSUFBTSxNQUFNLEdBQUcsd0JBQVcsTUFBWCxDQUFrQjtBQUMvQixFQUFBLEtBQUssRUFBRTtBQUNMLElBQUEsS0FBSyxFQUFFLGVBQU8sR0FEVDtBQUVMLElBQUEsUUFBUSxFQUFFO0FBRkw7QUFEd0IsQ0FBbEIsQ0FBZjs7QUFPQSxJQUFNLFVBQVUsR0FBb0IsU0FBOUIsVUFBOEIsT0FBOEI7QUFBQSxNQUE1QixRQUE0QixRQUE1QixRQUE0QjtBQUFBLE1BQWxCLEtBQWtCLFFBQWxCLEtBQWtCO0FBQUEsTUFBWCxNQUFXLFFBQVgsTUFBVztBQUNoRSxTQUNFLDZCQUFDLGdCQUFEO0FBQU0sSUFBQSxLQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBUixvQkFBbUIsS0FBbkIsRUFBYjtBQUF5QyxJQUFBLE1BQU0sRUFBRTtBQUFqRCxLQUNHLFFBREgsQ0FERjtBQUtELENBTkQ7O2VBUWUsVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1N0eWxlU2hlZXR9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQge1RleHR9IGZyb20gJ25hdGl2ZS1iYXNlJztcbmltcG9ydCB7Q09MT1JTfSBmcm9tICcuLi8uLi91dGlscy9zdHlsZXMvY29sb3JzJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgY2hpbGRyZW46IHN0cmluZztcbiAgc3R5bGU/OiB7W2tleTogc3RyaW5nXTogc3RyaW5nIHwgbnVtYmVyfTtcbiAgdGVzdElEPzogc3RyaW5nXG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgZXJyb3I6IHtcbiAgICBjb2xvcjogQ09MT1JTLlJFRCxcbiAgICBmb250U2l6ZTogMTIsXG4gIH0sXG59KTtcblxuY29uc3QgSW5wdXRFcnJvcjogUmVhY3QuRkM8UHJvcHM+ID0gKHtjaGlsZHJlbiwgc3R5bGUsIHRlc3RJRH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8VGV4dCBzdHlsZT17W3N0eWxlcy5lcnJvciwgey4uLnN0eWxlfV19IHRlc3RJRD17dGVzdElEfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1RleHQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBJbnB1dEVycm9yO1xuIl19