327e3e288b83574e623f7b1f59aa7b01
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));



var _utils = require("./utils");
var _serialize = require("./utils/serialize");
var _DocumentSnapshot = _interopRequireDefault(require("./DocumentSnapshot"));
var _native = require("../../utils/native");var






Transaction = function () {
  function Transaction(firestore, meta) {(0, _classCallCheck2.default)(this, Transaction);
    this._meta = meta;
    this._commandBuffer = [];
    this._firestore = firestore;
    this._pendingResult = undefined;
  }(0, _createClass2.default)(Transaction, [{ key: "_prepare", value: function _prepare()














    {
      this._commandBuffer = [];
      this._pendingResult = undefined;
    } }, { key: "get", value: function get(















    documentRef) {var _this = this;

      return (0, _native.getNativeModule)(this._firestore).transactionGetDocument(this._meta.id, documentRef.path).then(function (result) {return new _DocumentSnapshot.default(_this._firestore, result);});
    } }, { key: "set", value: function set(















    documentRef, data, options) {


      this._commandBuffer.push({
        type: 'set',
        path: documentRef.path,
        data: (0, _serialize.buildNativeMap)(data),
        options: options || {} });


      return this;
    } }, { key: "update", value: function update(














    documentRef) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}

      var data = (0, _utils.parseUpdateArgs)(args, 'Transaction.update');

      this._commandBuffer.push({
        type: 'update',
        path: documentRef.path,
        data: (0, _serialize.buildNativeMap)(data) });


      return this;
    } }, { key: "delete", value: function _delete(









    documentRef) {

      this._commandBuffer.push({
        type: 'delete',
        path: documentRef.path });


      return this;
    } }]);return Transaction;}();exports.default = Transaction;