48584ef70bf1cc516f3c313a7d2c9daf
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));



var _native = require("../../utils/native");var
Trace = function () {
  function Trace(perf, identifier) {(0, _classCallCheck2.default)(this, Trace);
    this._perf = perf;
    this.identifier = identifier;
  }(0, _createClass2.default)(Trace, [{ key: "getAttribute", value: function getAttribute(

    attribute) {
      return (0, _native.getNativeModule)(this._perf).getTraceAttribute(this.identifier, attribute);
    } }, { key: "getAttributes", value: function getAttributes()

    {
      return (0, _native.getNativeModule)(this._perf).getTraceAttributes(this.identifier);
    } }, { key: "getMetric", value: function getMetric(

    metricName) {
      return (0, _native.getNativeModule)(this._perf).getTraceLongMetric(this.identifier, metricName);
    } }, { key: "incrementMetric", value: function incrementMetric(

    metricName, incrementBy) {
      return (0, _native.getNativeModule)(this._perf).incrementTraceMetric(this.identifier, metricName, incrementBy);
    } }, { key: "putAttribute", value: function putAttribute(

    attribute, value) {
      return (0, _native.getNativeModule)(this._perf).putTraceAttribute(this.identifier, attribute, value);
    } }, { key: "putMetric", value: function putMetric(

    metricName, value) {
      return (0, _native.getNativeModule)(this._perf).putTraceMetric(this.identifier, metricName, value);
    } }, { key: "removeAttribute", value: function removeAttribute(

    attribute) {
      return (0, _native.getNativeModule)(this._perf).removeTraceAttribute(this.identifier, attribute);
    } }, { key: "start", value: function start()

    {
      return (0, _native.getNativeModule)(this._perf).startTrace(this.identifier);
    } }, { key: "stop", value: function stop()

    {
      return (0, _native.getNativeModule)(this._perf).stopTrace(this.identifier);
    } }]);return Trace;}();exports.default = Trace;