d7664e1efd5b9b449bce823d1049b072
"use strict";

exports.__esModule = true;
exports.default = void 0;

var _createDOMProps = _interopRequireDefault(require("../createDOMProps"));

var _findNodeHandle = _interopRequireDefault(require("../../exports/findNodeHandle"));

var _styleResolver = _interopRequireDefault(require("../../exports/StyleSheet/styleResolver"));

var _UIManager = _interopRequireDefault(require("../../exports/UIManager"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}










var NativeMethodsMixin = {



  blur: function blur() {
    _UIManager.default.blur((0, _findNodeHandle.default)(this));
  },





  focus: function focus() {
    _UIManager.default.focus((0, _findNodeHandle.default)(this));
  },




  measure: function measure(callback) {
    _UIManager.default.measure((0, _findNodeHandle.default)(this), callback);
  },
















  measureInWindow: function measureInWindow(callback) {
    _UIManager.default.measureInWindow((0, _findNodeHandle.default)(this), callback);
  },




  measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
    _UIManager.default.measureLayout((0, _findNodeHandle.default)(this), relativeToNativeNode, onFail, onSuccess);
  },







  setNativeProps: function setNativeProps(nativeProps) {
    if (!nativeProps) {
      return;
    }

    var node = (0, _findNodeHandle.default)(this);

    if (node) {


      var domProps = (0, _createDOMProps.default)(null, nativeProps, function (style) {
        return _styleResolver.default.resolveWithNode(style, node);
      });

      _UIManager.default.updateView(node, domProps, this);
    }
  } };

var _default = NativeMethodsMixin;
exports.default = _default;
module.exports = exports.default;