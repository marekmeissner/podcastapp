54e7c03ae6e07e2f92588cce75233d39
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Login = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _nativeBase = require("native-base");

var _formik = require("formik");

var Yup = _interopRequireWildcard(require("yup"));

var _constants = require("../../../utils/constants");

var _signIn = require("../../../../firebase/auth/signIn");

var _InputError = _interopRequireDefault(require("../../../components/InputError/InputError"));

var Login = function (_React$Component) {
  (0, _inherits2.default)(Login, _React$Component);

  function Login() {
    var _this;

    (0, _classCallCheck2.default)(this, Login);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Login).apply(this, arguments));

    _this.handleLogin = function _callee(_ref, _ref2) {
      var email, password, setSubmitting, setStatus, message;
      return _regenerator.default.async(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              email = _ref.email, password = _ref.password;
              setSubmitting = _ref2.setSubmitting, setStatus = _ref2.setStatus;
              _context.prev = 2;
              _context.next = 5;
              return _regenerator.default.awrap((0, _signIn.EmailPasswordSignIn)({
                email: email,
                password: password
              }));

            case 5:
              _context.next = 11;
              break;

            case 7:
              _context.prev = 7;
              _context.t0 = _context["catch"](2);
              message = _context.t0.message;
              console.warn(message);

            case 11:
              _context.prev = 11;
              setSubmitting(false);
              return _context.finish(11);

            case 14:
            case "end":
              return _context.stop();
          }
        }
      }, null, null, [[2, 7, 11, 14]]);
    };

    _this.validationSchema = Yup.object().shape({
      email: Yup.string().matches(_constants.EMAIL_REGEX, 'Email address provided is invalid').required('Required!'),
      password: Yup.string().required('Required!')
    });
    return _this;
  }

  (0, _createClass2.default)(Login, [{
    key: "render",
    value: function render() {
      return _react.default.createElement(_nativeBase.Container, null, _react.default.createElement(_reactNative.View, {
        style: {
          height: 300,
          justifyContent: 'center',
          alignItems: 'center'
        }
      }, _react.default.createElement(_reactNative.Image, {
        style: {
          width: '50%',
          height: '50%',
          marginBottom: -50
        },
        source: require('../../../assets/logo.png')
      })), _react.default.createElement(_nativeBase.Content, null, _react.default.createElement(_formik.Formik, {
        initialValues: {
          email: '',
          password: ''
        },
        validationSchema: this.validationSchema,
        onSubmit: this.handleLogin
      }, function (_ref4) {
        var handleChange = _ref4.handleChange,
            handleSubmit = _ref4.handleSubmit,
            values = _ref4.values,
            setFieldTouched = _ref4.setFieldTouched,
            errors = _ref4.errors,
            touched = _ref4.touched,
            isValid = _ref4.isValid,
            isSubmitting = _ref4.isSubmitting;
        return _react.default.createElement(_nativeBase.Form, {
          style: {
            padding: 20
          }
        }, _react.default.createElement(_nativeBase.Content, {
          style: {
            height: 80,
            paddingTop: 10
          }
        }, _react.default.createElement(_nativeBase.Item, {
          floatingLabel: true,
          error: touched.email && !!errors.email
        }, _react.default.createElement(_nativeBase.Label, null, "Email"), _react.default.createElement(_nativeBase.Input, {
          testID: 'email',
          keyboardType: "email-address",
          onChangeText: handleChange('email'),
          value: values.email,
          onBlur: function onBlur() {
            return setFieldTouched('email');
          },
          autoCapitalize: "none"
        })), errors.email && touched.email && _react.default.createElement(_InputError.default, {
          style: {
            paddingTop: 5
          },
          testID: 'emailError'
        }, errors.email)), _react.default.createElement(_nativeBase.Content, {
          style: {
            height: 80,
            paddingTop: 10
          }
        }, _react.default.createElement(_nativeBase.Item, {
          floatingLabel: true,
          error: touched.password && !!errors.password
        }, _react.default.createElement(_nativeBase.Label, null, "Password"), _react.default.createElement(_nativeBase.Input, {
          testID: 'password',
          onChangeText: handleChange('password'),
          value: values.password,
          textContentType: "password",
          secureTextEntry: true,
          onBlur: function onBlur() {
            return setFieldTouched('password');
          },
          autoCapitalize: "none"
        })), errors.password && touched.password && _react.default.createElement(_InputError.default, {
          style: {
            paddingTop: 5
          },
          testID: 'passwordError'
        }, errors.password)), _react.default.createElement(_nativeBase.Button, {
          testID: 'submit',
          rounded: true,
          large: true,
          onPress: handleSubmit,
          style: {
            marginTop: 40
          }
        }, isSubmitting ? _react.default.createElement(_reactNative.ActivityIndicator, {
          testID: 'loader',
          size: "small",
          color: "#ffffff"
        }) : _react.default.createElement(_nativeBase.Text, null, "Sign in")), _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            justifyContent: 'space-between',
            paddingTop: 15
          }
        }, _react.default.createElement(_nativeBase.Button, {
          transparent: true,
          small: true
        }, _react.default.createElement(_nativeBase.Text, null, "Forgot password?")), _react.default.createElement(_nativeBase.Button, {
          transparent: true,
          small: true
        }, _react.default.createElement(_nativeBase.Text, null, "Don't have account?"))));
      })));
    }
  }]);
  return Login;
}(_react.default.Component);

exports.Login = Login;
var _default = Login;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9wcml2YXRlL3Zhci93d3cvSGlsbGNvZGUvcG9kY2FzdGFwcC9hcHAvc3JjL3NjcmVlbnMvQXV0aC9Mb2dpbi9Mb2dpbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBV0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0lBRWEsSzs7O0FBQWIsbUJBQUE7QUFBQTs7QUFBQTs7O0FBQ0UsVUFBQSxXQUFBLEdBQWM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1gsY0FBQSxLQURXLFFBQ1gsS0FEVyxFQUNKLFFBREksUUFDSixRQURJO0FBRVgsY0FBQSxhQUZXLFNBRVgsYUFGVyxFQUVJLFNBRkosU0FFSSxTQUZKO0FBQUE7QUFBQTtBQUFBLGdEQUtKLGlDQUFvQjtBQUFDLGdCQUFBLEtBQUssRUFBTCxLQUFEO0FBQVEsZ0JBQUEsUUFBUSxFQUFSO0FBQVIsZUFBcEIsQ0FMSTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBTUYsY0FBQSxPQU5FLGVBTUYsT0FORTtBQU9WLGNBQUEsT0FBTyxDQUFDLElBQVIsQ0FBYSxPQUFiOztBQVBVO0FBQUE7QUFTVixjQUFBLGFBQWEsQ0FBQyxLQUFELENBQWI7QUFUVTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFkOztBQWFBLFVBQUEsZ0JBQUEsR0FBbUIsR0FBRyxDQUFDLE1BQUosR0FBYSxLQUFiLENBQW1CO0FBQ3BDLE1BQUEsS0FBSyxFQUFFLEdBQUcsQ0FBQyxNQUFKLEdBQ0osT0FESSxDQUNJLHNCQURKLEVBQ2lCLG1DQURqQixFQUVKLFFBRkksQ0FFSyxXQUZMLENBRDZCO0FBSXBDLE1BQUEsUUFBUSxFQUFFLEdBQUcsQ0FBQyxNQUFKLEdBQWEsUUFBYixDQUFzQixXQUF0QjtBQUowQixLQUFuQixDQUFuQjtBQWRGO0FBa0lDOzs7OzZCQTdHTztBQUNKLGFBQ0UsNkJBQUMscUJBQUQs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b3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtWaWV3LCBBY3Rpdml0eUluZGljYXRvciwgSW1hZ2V9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQge1xuICBDb250YWluZXIsXG4gIENvbnRlbnQsXG4gIEl0ZW0sXG4gIElucHV0LFxuICBCdXR0b24sXG4gIFRleHQsXG4gIEZvcm0sXG4gIExhYmVsLFxufSBmcm9tICduYXRpdmUtYmFzZSc7XG5pbXBvcnQge1VzZXJDcmVkZW50aWFsc30gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHtGb3JtaWssIEZvcm1pa0FjdGlvbnN9IGZyb20gJ2Zvcm1payc7XG5pbXBvcnQgKiBhcyBZdXAgZnJvbSAneXVwJztcbmltcG9ydCB7RU1BSUxfUkVHRVh9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2NvbnN0YW50cyc7XG5pbXBvcnQge0VtYWlsUGFzc3dvcmRTaWduSW59IGZyb20gJy4uLy4uLy4uLy4uL2ZpcmViYXNlL2F1dGgvc2lnbkluJztcbmltcG9ydCBJbnB1dEVycm9yIGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvSW5wdXRFcnJvci9JbnB1dEVycm9yJztcblxuZXhwb3J0IGNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgaGFuZGxlTG9naW4gPSBhc3luYyAoXG4gICAge2VtYWlsLCBwYXNzd29yZH06IFVzZXJDcmVkZW50aWFscyxcbiAgICB7c2V0U3VibWl0dGluZywgc2V0U3RhdHVzfTogRm9ybWlrQWN0aW9uczxVc2VyQ3JlZGVudGlhbHM+LFxuICApID0+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgRW1haWxQYXNzd29yZFNpZ25Jbih7ZW1haWwsIHBhc3N3b3JkfSk7XG4gICAgfSBjYXRjaCAoe21lc3NhZ2V9KSB7XG4gICAgICBjb25zb2xlLndhcm4obWVzc2FnZSk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldFN1Ym1pdHRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICB2YWxpZGF0aW9uU2NoZW1hID0gWXVwLm9iamVjdCgpLnNoYXBlKHtcbiAgICBlbWFpbDogWXVwLnN0cmluZygpXG4gICAgICAubWF0Y2hlcyhFTUFJTF9SRUdFWCwgJ0VtYWlsIGFkZHJlc3MgcHJvdmlkZWQgaXMgaW52YWxpZCcpXG4gICAgICAucmVxdWlyZWQoJ1JlcXVpcmVkIScpLFxuICAgIHBhc3N3b3JkOiBZdXAuc3RyaW5nKCkucmVxdWlyZWQoJ1JlcXVpcmVkIScpLFxuICB9KTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxDb250YWluZXI+XG4gICAgICAgIDxWaWV3XG4gICAgICAgICAgc3R5bGU9e3toZWlnaHQ6IDMwMCwganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLCBhbGlnbkl0ZW1zOiAnY2VudGVyJ319PlxuICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgc3R5bGU9e3t3aWR0aDogJzUwJScsIGhlaWdodDogJzUwJScsIG1hcmdpbkJvdHRvbTogLTUwfX1cbiAgICAgICAgICAgIHNvdXJjZT17cmVxdWlyZSgnLi4vLi4vLi4vYXNzZXRzL2xvZ28ucG5nJyl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9WaWV3PlxuICAgICAgICA8Q29udGVudD5cbiAgICAgICAgICA8Rm9ybWlrXG4gICAgICAgICAgICBpbml0aWFsVmFsdWVzPXt7XG4gICAgICAgICAgICAgIGVtYWlsOiAnJyxcbiAgICAgICAgICAgICAgcGFzc3dvcmQ6ICcnLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIHZhbGlkYXRpb25TY2hlbWE9e3RoaXMudmFsaWRhdGlvblNjaGVtYX1cbiAgICAgICAgICAgIG9uU3VibWl0PXt0aGlzLmhhbmRsZUxvZ2lufT5cbiAgICAgICAgICAgIHsoe1xuICAgICAgICAgICAgICBoYW5kbGVDaGFuZ2UsXG4gICAgICAgICAgICAgIGhhbmRsZVN1Ym1pdCxcbiAgICAgICAgICAgICAgdmFsdWVzLFxuICAgICAgICAgICAgICBzZXRGaWVsZFRvdWNoZWQsXG4gICAgICAgICAgICAgIGVycm9ycyxcbiAgICAgICAgICAgICAgdG91Y2hlZCxcbiAgICAgICAgICAgICAgaXNWYWxpZCxcbiAgICAgICAgICAgICAgaXNTdWJtaXR0aW5nLFxuICAgICAgICAgICAgfSkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxGb3JtIHN0eWxlPXt7cGFkZGluZzogMjB9fT5cbiAgICAgICAgICAgICAgICAgIDxDb250ZW50IHN0eWxlPXt7aGVpZ2h0OiA4MCwgcGFkZGluZ1RvcDogMTB9fT5cbiAgICAgICAgICAgICAgICAgICAgPEl0ZW0gZmxvYXRpbmdMYWJlbCBlcnJvcj17dG91Y2hlZC5lbWFpbCAmJiAhIWVycm9ycy5lbWFpbH0+XG4gICAgICAgICAgICAgICAgICAgICAgPExhYmVsPkVtYWlsPC9MYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlc3RJRD17J2VtYWlsJ31cbiAgICAgICAgICAgICAgICAgICAgICAgIGtleWJvYXJkVHlwZT1cImVtYWlsLWFkZHJlc3NcIlxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2VUZXh0PXtoYW5kbGVDaGFuZ2UoJ2VtYWlsJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dmFsdWVzLmVtYWlsfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25CbHVyPXsoKSA9PiBzZXRGaWVsZFRvdWNoZWQoJ2VtYWlsJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvQ2FwaXRhbGl6ZT1cIm5vbmVcIlxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvSXRlbT5cbiAgICAgICAgICAgICAgICAgICAge2Vycm9ycy5lbWFpbCAmJiB0b3VjaGVkLmVtYWlsICYmIChcbiAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRFcnJvciBzdHlsZT17e3BhZGRpbmdUb3A6IDV9fSB0ZXN0SUQ9eydlbWFpbEVycm9yJ30+XG4gICAgICAgICAgICAgICAgICAgICAgICB7ZXJyb3JzLmVtYWlsfVxuICAgICAgICAgICAgICAgICAgICAgIDwvSW5wdXRFcnJvcj5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIDwvQ29udGVudD5cbiAgICAgICAgICAgICAgICAgIDxDb250ZW50IHN0eWxlPXt7aGVpZ2h0OiA4MCwgcGFkZGluZ1RvcDogMTB9fT5cbiAgICAgICAgICAgICAgICAgICAgPEl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICBmbG9hdGluZ0xhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgZXJyb3I9e3RvdWNoZWQucGFzc3dvcmQgJiYgISFlcnJvcnMucGFzc3dvcmR9PlxuICAgICAgICAgICAgICAgICAgICAgIDxMYWJlbD5QYXNzd29yZDwvTGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXN0SUQ9eydwYXNzd29yZCd9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZVRleHQ9e2hhbmRsZUNoYW5nZSgncGFzc3dvcmQnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZXMucGFzc3dvcmR9XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0Q29udGVudFR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN1cmVUZXh0RW50cnlcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0RmllbGRUb3VjaGVkKCdwYXNzd29yZCcpfVxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0b0NhcGl0YWxpemU9XCJub25lXCJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L0l0ZW0+XG4gICAgICAgICAgICAgICAgICAgIHtlcnJvcnMucGFzc3dvcmQgJiYgdG91Y2hlZC5wYXNzd29yZCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgPElucHV0RXJyb3JcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7cGFkZGluZ1RvcDogNX19XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXN0SUQ9eydwYXNzd29yZEVycm9yJ30+XG4gICAgICAgICAgICAgICAgICAgICAgICB7ZXJyb3JzLnBhc3N3b3JkfVxuICAgICAgICAgICAgICAgICAgICAgIDwvSW5wdXRFcnJvcj5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIDwvQ29udGVudD5cblxuICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICB0ZXN0SUQ9eydzdWJtaXQnfVxuICAgICAgICAgICAgICAgICAgICByb3VuZGVkXG4gICAgICAgICAgICAgICAgICAgIGxhcmdlXG4gICAgICAgICAgICAgICAgICAgIG9uUHJlc3M9e2hhbmRsZVN1Ym1pdH1cbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3ttYXJnaW5Ub3A6IDQwfX0+XG4gICAgICAgICAgICAgICAgICAgIHtpc1N1Ym1pdHRpbmcgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgPEFjdGl2aXR5SW5kaWNhdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXN0SUQ9eydsb2FkZXInfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPVwiI2ZmZmZmZlwiXG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dD5TaWduIGluPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICA8Vmlld1xuICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICAgICAgICAgICAgICAgICAgcGFkZGluZ1RvcDogMTUsXG4gICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHRyYW5zcGFyZW50IHNtYWxsPlxuICAgICAgICAgICAgICAgICAgICAgIDxUZXh0PkZvcmdvdCBwYXNzd29yZD88L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHRyYW5zcGFyZW50IHNtYWxsPlxuICAgICAgICAgICAgICAgICAgICAgIDxUZXh0PkRvbid0IGhhdmUgYWNjb3VudD88L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgPC9WaWV3PlxuICAgICAgICAgICAgICAgIDwvRm9ybT5cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPC9Gb3JtaWs+XG4gICAgICAgIDwvQ29udGVudD5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTG9naW47XG4iXX0=