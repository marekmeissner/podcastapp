ceb8cc6eb59e8e66fbf394c66423bad0
"use strict";var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _reactNative = require("react-native");
var _apps = _interopRequireDefault(require("../../utils/apps"));
var _events = require("../../utils/events");
var _internals = _interopRequireDefault(require("../../utils/internals"));
var _utils = require("../../utils");
var _admob = _interopRequireWildcard(require("../admob"));
var _auth = _interopRequireWildcard(require("../auth"));
var _analytics = _interopRequireWildcard(require("../analytics"));
var _config = _interopRequireWildcard(require("../config"));
var _crashlytics = _interopRequireWildcard(require("../crashlytics"));
var _database = _interopRequireWildcard(require("../database"));
var _firestore = _interopRequireWildcard(require("../firestore"));
var _functions = _interopRequireWildcard(require("../functions"));
var _iid = _interopRequireWildcard(require("../iid"));
var _links = _interopRequireWildcard(require("../links"));
var _messaging = _interopRequireWildcard(require("../messaging"));
var _notifications = _interopRequireWildcard(require("../notifications"));
var _perf = _interopRequireWildcard(require("../perf"));
var _storage = _interopRequireWildcard(require("../storage"));
var _utils2 = _interopRequireWildcard(require("../utils"));
var FirebaseCoreModule = _reactNative.NativeModules.RNFirebase;var
App = function () {



  function App(name, options) {var _this = this;var fromNative = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;(0, _classCallCheck2.default)(this, App);this._initialized = false;this._nativeInitialized = false;
    this._name = name;
    this._options = (0, _extends2.default)({}, options);

    if (fromNative) {
      this._initialized = true;
      this._nativeInitialized = true;
    } else if (options.databaseURL && options.apiKey) {
      FirebaseCoreModule.initializeApp(this._name, this._options, function (error, result) {
        _this._initialized = true;
        _events.SharedEventEmitter.emit("AppReady:" + _this._name, {
          error: error,
          result: result });

      });
    }


    this.admob = _apps.default.appModule(this, _admob.NAMESPACE, _admob.default);
    this.analytics = _apps.default.appModule(this, _analytics.NAMESPACE, _analytics.default);
    this.auth = _apps.default.appModule(this, _auth.NAMESPACE, _auth.default);
    this.config = _apps.default.appModule(this, _config.NAMESPACE, _config.default);
    this.crashlytics = _apps.default.appModule(this, _crashlytics.NAMESPACE, _crashlytics.default);
    this.database = _apps.default.appModule(this, _database.NAMESPACE, _database.default);
    this.firestore = _apps.default.appModule(this, _firestore.NAMESPACE, _firestore.default);
    this.functions = _apps.default.appModule(this, _functions.NAMESPACE, _functions.default);
    this.iid = _apps.default.appModule(this, _iid.NAMESPACE, _iid.default);
    this.links = _apps.default.appModule(this, _links.NAMESPACE, _links.default);
    this.messaging = _apps.default.appModule(this, _messaging.NAMESPACE, _messaging.default);
    this.notifications = _apps.default.appModule(this, _notifications.NAMESPACE, _notifications.default);
    this.perf = _apps.default.appModule(this, _perf.NAMESPACE, _perf.default);
    this.storage = _apps.default.appModule(this, _storage.NAMESPACE, _storage.default);
    this.utils = _apps.default.appModule(this, _utils2.NAMESPACE, _utils2.default);
    this._extendedProps = {};
  }(0, _createClass2.default)(App, [{ key: "extendApp", value: function extendApp(




























    props) {
      if (!(0, _utils.isObject)(props)) {
        throw new Error(_internals.default.STRINGS.ERROR_MISSING_ARG('Object', 'extendApp'));
      }

      var keys = Object.keys(props);

      for (var i = 0, len = keys.length; i < len; i++) {
        var key = keys[i];

        if (!this._extendedProps[key] && Object.hasOwnProperty.call(this, key)) {
          throw new Error(_internals.default.STRINGS.ERROR_PROTECTED_PROP(key));
        }


        this[key] = props[key];
        this._extendedProps[key] = true;
      }
    } }, { key: "delete", value: function _delete()






    {var _this2 = this;
      if (this._name === _apps.default.DEFAULT_APP_NAME && this._nativeInitialized) {
        return Promise.reject(new Error('Unable to delete the default native firebase app instance.'));
      }

      return FirebaseCoreModule.deleteApp(this._name).then(function () {return _apps.default.deleteApp(_this2._name);});
    } }, { key: "onReady", value: function onReady()






    {var _this3 = this;
      if (this._initialized) return Promise.resolve(this);
      return new Promise(function (resolve, reject) {
        _events.SharedEventEmitter.once("AppReady:" + _this3._name, function (_ref)

        {var error = _ref.error;
          if (error) return reject(new Error(error));

          return resolve(_this3);
        });
      });
    } }, { key: "toString", value: function toString()







    {
      return this._name;
    } }, { key: "name", get: function get() {return this._name;} }, { key: "options", get: function get() {return (0, _extends2.default)({}, this._options);} }]);return App;}();exports.default = App;