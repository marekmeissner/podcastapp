804a47630f2f5b12dad919087944ead0
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.initialiseLogger = exports.LEVELS = exports.getLogger = void 0;var _internals = _interopRequireDefault(require("./internals"));
var NATIVE_LOGGERS = {};

var getModuleKey = function getModuleKey(module) {return module.app.name + ":" + module.namespace;};

var getLogger = function getLogger(module) {
  var key = getModuleKey(module);
  return NATIVE_LOGGERS[key];
};exports.getLogger = getLogger;
var LEVELS = {
  debug: 0,
  info: 1,
  warn: 2,
  error: 3 };exports.LEVELS = LEVELS;

var initialiseLogger = function initialiseLogger(module, logNamespace) {
  var key = getModuleKey(module);

  if (!NATIVE_LOGGERS[key]) {
    var prefix = "\uD83D\uDD25 " + logNamespace.toUpperCase();
    NATIVE_LOGGERS[key] = {
      debug: function debug() {var _console;for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}
        if (__DEV__ && LEVELS.debug >= LEVELS[_internals.default.OPTIONS.logLevel]) (_console = console).log.apply(_console, [prefix].concat(args));
      },

      info: function info() {var _console2;for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {args[_key2] = arguments[_key2];}
        if (__DEV__ && LEVELS.info >= LEVELS[_internals.default.OPTIONS.logLevel]) (_console2 = console).log.apply(_console2, [prefix].concat(args));
      },

      warn: function warn() {var _console3;
        if (__DEV__ && LEVELS.warn >= LEVELS[_internals.default.OPTIONS.logLevel]) (_console3 = console).warn.apply(_console3, arguments);
      },

      error: function error() {var _console4;
        (_console4 = console).error.apply(_console4, arguments);
      } };


  }
};exports.initialiseLogger = initialiseLogger;