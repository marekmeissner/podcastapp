1d566ee1e96f0e784fca1a8fe989803a
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.initialiseNativeModule = exports.getNativeModule = void 0;var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _reactNative = require("react-native");
var _events = require("./events");
var _internals = _interopRequireDefault(require("./internals"));
var NATIVE_MODULES = {};






var nativeWithArgs = function nativeWithArgs(NativeModule, argToPrepend) {
  var native = {};
  var methods = Object.keys(NativeModule);var _loop = function _loop(

  i, len) {
    var method = methods[i];

    if (typeof NativeModule[method] === 'function') {
      native[method] = function () {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}return NativeModule[method].apply(NativeModule, [].concat((0, _toConsumableArray2.default)(argToPrepend), args));};
    } else {
      native[method] = NativeModule[method];
    }};for (var i = 0, len = methods.length; i < len; i++) {_loop(i, len);
  }

  return native;
};

var nativeModuleKey = function nativeModuleKey(module) {return (module._customUrlOrRegion || module.app.name) + ":" + module.namespace;};

var getNativeModule = function getNativeModule(module) {return NATIVE_MODULES[nativeModuleKey(module)];};exports.getNativeModule = getNativeModule;
var initialiseNativeModule = function initialiseNativeModule(module, config, customUrlOrRegion) {var

  moduleName =




  config.moduleName,hasMultiAppSupport = config.hasMultiAppSupport,hasCustomUrlSupport = config.hasCustomUrlSupport,hasRegionsSupport = config.hasRegionsSupport,namespace = config.namespace;
  var nativeModule = _reactNative.NativeModules[moduleName];
  var key = nativeModuleKey(module);

  if (!nativeModule && namespace !== 'utils') {
    throw new Error(_internals.default.STRINGS.ERROR_MISSING_MODULE(namespace, moduleName));
  }



  var argToPrepend = [];

  if (hasMultiAppSupport) {
    argToPrepend.push(module.app.name);
  }

  if (hasCustomUrlSupport || hasRegionsSupport) {
    argToPrepend.push(customUrlOrRegion);
  }

  if (argToPrepend.length) {
    NATIVE_MODULES[key] = nativeWithArgs(nativeModule, argToPrepend);
  } else {
    NATIVE_MODULES[key] = nativeModule;
  }

  (0, _events.initialiseNativeModuleEventEmitter)(module, config);
  return NATIVE_MODULES[key];
};exports.initialiseNativeModule = initialiseNativeModule;