a36c772a41897b54ae9a77ccb02a7f5d









'use strict';

exports.__esModule = true;
exports.default = void 0;

var _invariant = _interopRequireDefault(require("fbjs/lib/invariant"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}





var EventSubscriptionVendor =

function () {
  function EventSubscriptionVendor() {
    this._subscriptionsForType = {};
    this._currentSubscription = null;
  }








  var _proto = EventSubscriptionVendor.prototype;

  _proto.addSubscription = function addSubscription(eventType, subscription) {
    (0, _invariant.default)(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');

    if (!this._subscriptionsForType[eventType]) {
      this._subscriptionsForType[eventType] = [];
    }

    var key = this._subscriptionsForType[eventType].length;

    this._subscriptionsForType[eventType].push(subscription);

    subscription.eventType = eventType;
    subscription.key = key;
    return subscription;
  };








  _proto.removeAllSubscriptions = function removeAllSubscriptions(eventType) {
    if (eventType === undefined) {
      this._subscriptionsForType = {};
    } else {
      delete this._subscriptionsForType[eventType];
    }
  };








  _proto.removeSubscription = function removeSubscription(subscription) {
    var eventType = subscription.eventType;
    var key = subscription.key;
    var subscriptionsForType = this._subscriptionsForType[eventType];

    if (subscriptionsForType) {
      delete subscriptionsForType[key];
    }
  };














  _proto.getSubscriptionsForType = function getSubscriptionsForType(eventType) {
    return this._subscriptionsForType[eventType];
  };

  return EventSubscriptionVendor;
}();

var _default = EventSubscriptionVendor;
exports.default = _default;
module.exports = exports.default;