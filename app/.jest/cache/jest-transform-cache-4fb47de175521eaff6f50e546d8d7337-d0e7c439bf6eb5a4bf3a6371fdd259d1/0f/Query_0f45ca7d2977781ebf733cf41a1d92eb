dd7960fdb6088ea61cfb5301da28a843
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));



var _utils = require("../../utils");var





Query = function () {
  function Query(ref, existingModifiers) {(0, _classCallCheck2.default)(this, Query);
    this.modifiers = existingModifiers ? (0, _toConsumableArray2.default)(existingModifiers) : [];
    this._reference = ref;
  }(0, _createClass2.default)(Query, [{ key: "orderBy", value: function orderBy(








    name, key) {
      this.modifiers.push({
        id: "orderBy-" + name + ":" + (key || ''),
        type: 'orderBy',
        name: name,
        key: key });

      return this._reference;
    } }, { key: "limit", value: function limit(








    name, _limit) {
      this.modifiers.push({
        id: "limit-" + name + ":" + _limit,
        type: 'limit',
        name: name,
        limit: _limit });

      return this._reference;
    } }, { key: "filter", value: function filter(









    name, value, key) {
      this.modifiers.push({
        id: "filter-" + name + ":" + (0, _utils.objectToUniqueId)(value) + ":" + (key || ''),
        type: 'filter',
        name: name,
        value: value,
        valueType: typeof value,
        key: key });

      return this._reference;
    } }, { key: "getModifiers", value: function getModifiers()






    {
      return (0, _toConsumableArray2.default)(this.modifiers);
    } }, { key: "queryIdentifier", value: function queryIdentifier()






    {

      var sortedModifiers = this.getModifiers().sort(function (a, b) {
        if (a.id < b.id) return -1;
        if (a.id > b.id) return 1;
        return 0;
      });

      var key = '{';

      for (var i = 0; i < sortedModifiers.length; i++) {
        if (i !== 0) key += ',';
        key += sortedModifiers[i].id;
      }

      key += '}';
      return key;
    } }]);return Query;}();exports.default = Query;